//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace jwh.blaze.application {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
    internal sealed partial class blazeEditorSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static blazeEditorSettings defaultInstance = ((blazeEditorSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new blazeEditorSettings())));
        
        public static blazeEditorSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("S:/benefitCal_WL/dbsystem/com/fidelity/definedbenefit/benefitcalculator/repositor" +
            "y/client")]
        public string repoPathString {
            get {
                return ((string)(this["repoPathString"]));
            }
            set {
                this["repoPathString"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("11")]
        public int editorFontSize {
            get {
                return ((int)(this["editorFontSize"]));
            }
            set {
                this["editorFontSize"] = value;
            }
        }
    }
}
